name: Validate all Bootstraps

on:
  push:

jobs:
  # ------------------------
  find_bootstraps:
    name: Find all Bootstraps with a devcontainer spec
    runs-on: ubuntu-latest
    outputs:
      bootstraps: ${{ steps.generate-matrix.outputs.bootstraps }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install Devcontainers CLI
        run: npm install -g @devcontainers/cli
      - uses: actions/checkout@v3
      - name: Generate Matrix
        id: generate-matrix
        run: |
          set -x
          BOOTSTRAPS=$((for i in $(ls -d */);
          do 
            # Let @devcontainers/cli try and find its configuration in the changed folder. If it finds it, print the folder, otherwise, continue
            devcontainer read-configuration --workspace-folder "$i" > /dev/null && echo "$i" || true
          done) | jq -Rsc '. / "\n" - [""]')
          echo ::set-output name=bootstraps::${BOOTSTRAPS}

  run_tests:
    name: Validate Bootstrap ${{ matrix.bootstrap }}
    needs: [find_bootstraps]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bootstrap: ${{ fromJson(needs.find_bootstraps.outputs.bootstraps) }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install Devcontainers CLI
        run: npm install -g @devcontainers/cli
      - uses: actions/checkout@v3
      - name: Run Test for ${{ matrix.bootstrap }}
        run: |
          ./.bin/run_test_in_devcontainer.sh "${{ matrix.bootstrap }}"
